"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
// Generated by Khrysalis TypeScript converter - this file will be overwritten.
// File: observables/TransformedObservableProperty.kt
// Package: com.lightningkite.butterfly.observables
const ObservableProperty_1 = require("./ObservableProperty");
const operators_1 = require("rxjs/operators");
//! Declares com.lightningkite.butterfly.observables.TransformedObservableProperty
class TransformedObservableProperty extends ObservableProperty_1.ObservableProperty {
    constructor(basedOn, read) {
        super();
        this.basedOn = basedOn;
        this.read = read;
    }
    //! Declares com.lightningkite.butterfly.observables.TransformedObservableProperty.value
    get value() {
        return this.read(this.basedOn.value);
    }
    //! Declares com.lightningkite.butterfly.observables.TransformedObservableProperty.onChange
    get onChange() {
        const readCopy = this.read;
        return this.basedOn.onChange.pipe(operators_1.map((it) => readCopy(it)));
    }
}
exports.TransformedObservableProperty = TransformedObservableProperty;
//! Declares com.lightningkite.butterfly.observables.map>com.lightningkite.butterfly.observables.ObservableProperty<kotlin.Any>
function xObservablePropertyMap(this_, read) {
    return new TransformedObservableProperty(this_, read);
}
exports.xObservablePropertyMap = xObservablePropertyMap;
//# sourceMappingURL=TransformedObservableProperty.js.map