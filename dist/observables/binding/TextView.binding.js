"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
// Generated by Butterfly TypeScript converter
// File: observables/binding/TextView.binding.kt
// Package: com.lightningkite.butterfly.observables.binding
const ObservableProperty_ext_1 = require("../ObservableProperty.ext");
const DisposeCondition_ext_1 = require("../../rx/DisposeCondition.ext");
const View_ext_1 = require("../../views/View.ext");
const ViewWithText_ext_1 = require("../../views/ViewWithText.ext");
//! Declares com.lightningkite.butterfly.observables.binding.bindString>android.widget.TextView
function xTextViewBindString(this_, observable) {
    DisposeCondition_ext_1.xDisposableUntil(ObservableProperty_ext_1.xObservablePropertySubscribeBy(observable, undefined, undefined, (value) => {
        ViewWithText_ext_1.setViewText(this_, value);
    }), DisposeCondition_ext_1.xViewRemovedGet(this_));
}
exports.xTextViewBindString = xTextViewBindString;
//! Declares com.lightningkite.butterfly.observables.binding.bindStringRes>android.widget.TextView
function xTextViewBindStringRes(this_, observable) {
    DisposeCondition_ext_1.xDisposableUntil(ObservableProperty_ext_1.xObservablePropertySubscribeBy(observable, undefined, undefined, (value) => {
        View_ext_1.setViewVisibility(this_, value === null ? "gone" : "visible");
        if (value !== null) {
            ViewWithText_ext_1.setViewText(this_, value);
        }
    }), DisposeCondition_ext_1.xViewRemovedGet(this_));
}
exports.xTextViewBindStringRes = xTextViewBindStringRes;
//! Declares com.lightningkite.butterfly.observables.binding.bindText>android.widget.TextView
function xTextViewBindText(this_, observable, transform) {
    DisposeCondition_ext_1.xDisposableUntil(ObservableProperty_ext_1.xObservablePropertySubscribeBy(observable, undefined, undefined, (value) => {
        ViewWithText_ext_1.setViewText(this_, transform(value));
    }), DisposeCondition_ext_1.xViewRemovedGet(this_));
}
exports.xTextViewBindText = xTextViewBindText;
//# sourceMappingURL=TextView.binding.js.map