"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
// Generated by Butterfly TypeScript converter
// File: observables/binding/ImageView.binding.kt
// Package: com.lightningkite.butterfly.observables.binding
const ObservableProperty_ext_1 = require("../ObservableProperty.ext");
const DisposeCondition_ext_1 = require("../../rx/DisposeCondition.ext");
const ImageView_1 = require("../../views/ImageView");
const delay_1 = require("../../delay");
//! Declares com.lightningkite.butterfly.observables.binding.bindImage
function xImageViewBindImage(this_, image) {
    delay_1.post(() => {
        DisposeCondition_ext_1.xDisposableUntil(ObservableProperty_ext_1.xObservablePropertySubscribeBy(image, undefined, undefined, (it) => {
            ImageView_1.xImageViewLoadImage(this_, it);
        }), DisposeCondition_ext_1.xViewRemovedGet(this_));
    });
}
exports.xImageViewBindImage = xImageViewBindImage;
//! Declares com.lightningkite.butterfly.observables.binding.bindVideoThumbnail
function xImageViewBindVideoThumbnail(this_, image) {
    delay_1.post(() => {
        DisposeCondition_ext_1.xDisposableUntil(ObservableProperty_ext_1.xObservablePropertySubscribeBy(image, undefined, undefined, (it) => {
            ImageView_1.xImageViewLoadVideoThumbnail(this_, it);
        }), DisposeCondition_ext_1.xViewRemovedGet(this_));
    });
}
exports.xImageViewBindVideoThumbnail = xImageViewBindVideoThumbnail;
//# sourceMappingURL=ImageView.binding.js.map