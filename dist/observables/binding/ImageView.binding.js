"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
// Generated by Khrysalis TypeScript converter
// File: observables/binding/ImageView.binding.actual.kt
// Package: com.lightningkite.butterfly.observables.binding
const ObservableProperty_ext_1 = require("../ObservableProperty.ext");
const DisposeCondition_ext_1 = require("../../rx/DisposeCondition.ext");
const ImageView_1 = require("../../views/ImageView");
const delay_1 = require("../../delay");
const Language_1 = require("../../kotlin/Language");
//! Declares com.lightningkite.butterfly.observables.binding.bindImage
function xImageViewBindImage(this_, image) {
    const img = findImageView(this_);
    if (img) {
        delay_1.post(() => {
            DisposeCondition_ext_1.xDisposableUntil(ObservableProperty_ext_1.xObservablePropertySubscribeBy(image, undefined, undefined, (it) => {
                ImageView_1.xImageViewLoadImage(img, it);
            }), DisposeCondition_ext_1.xViewRemovedGet(this_));
        });
    }
}
exports.xImageViewBindImage = xImageViewBindImage;
//! Declares com.lightningkite.butterfly.observables.binding.bindVideoThumbnail
function xImageViewBindVideoThumbnail(this_, image) {
    const img = findImageView(this_);
    if (img) {
        delay_1.post(() => {
            DisposeCondition_ext_1.xDisposableUntil(ObservableProperty_ext_1.xObservablePropertySubscribeBy(image, undefined, undefined, (it) => {
                ImageView_1.xImageViewLoadVideoThumbnail(img, it);
            }), DisposeCondition_ext_1.xViewRemovedGet(this_));
        });
    }
}
exports.xImageViewBindVideoThumbnail = xImageViewBindVideoThumbnail;
function findImageView(element) {
    if (element instanceof HTMLImageElement)
        return element;
    for (const childIndex of new Language_1.NumberRange(0, element.children.length - 1)) {
        const child = element.children.item(childIndex);
        if (child instanceof HTMLImageElement) {
            return child;
        }
    }
    return null;
}
//# sourceMappingURL=ImageView.binding.js.map