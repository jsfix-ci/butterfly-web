"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
// Generated by Butterfly TypeScript converter
// File: observables/binding/PageIndicatorView.binding.kt
// Package: com.lightningkite.butterfly.observables.binding
const ObservableProperty_ext_1 = require("../ObservableProperty.ext");
const DisposeCondition_ext_1 = require("../../rx/DisposeCondition.ext");
//! Declares com.lightningkite.butterfly.observables.binding.bind>com.rd.PageIndicatorView
function xPageIndicatorViewBind(this_, count = 0, selected) {
    for (let i = 0; i < count; i++) {
        const e = document.createElement("div");
        e.classList.add("butterfly-page-indicator-dot");
        this_.appendChild(e);
    }
    let previouslyActive = this_.firstElementChild;
    DisposeCondition_ext_1.xDisposableUntil(ObservableProperty_ext_1.xObservablePropertySubscribeBy(selected, undefined, undefined, (page) => {
        if (previouslyActive) {
            previouslyActive.classList.remove("butterfly-page-indicator-dot-active");
        }
        const e = this_.children.item(page);
        if (e) {
            e.classList.add("butterfly-page-indicator-dot-active");
        }
        previouslyActive = e;
    }), DisposeCondition_ext_1.xViewRemovedGet(this_));
}
exports.xPageIndicatorViewBind = xPageIndicatorViewBind;
//! Declares com.lightningkite.butterfly.observables.binding.bind>com.rd.PageIndicatorView
function xPageIndicatorViewBindDynamic(this_, count, selected) {
    let previouslyActive = this_.firstElementChild;
    DisposeCondition_ext_1.xDisposableUntil(ObservableProperty_ext_1.xObservablePropertySubscribeBy(count, undefined, undefined, (count) => {
        this_.innerHTML = "";
        for (let i = 0; i < count; i++) {
            const e = document.createElement("div");
            e.classList.add("butterfly-page-indicator-dot");
            if (i === selected.value) {
                e.classList.add("butterfly-page-indicator-dot-active");
                previouslyActive = e;
            }
            this_.appendChild(e);
        }
    }), DisposeCondition_ext_1.xViewRemovedGet(this_));
    DisposeCondition_ext_1.xDisposableUntil(ObservableProperty_ext_1.xObservablePropertySubscribeBy(selected, undefined, undefined, (page) => {
        if (previouslyActive) {
            previouslyActive.classList.remove("butterfly-page-indicator-dot-active");
        }
        const e = this_.children.item(page);
        if (e) {
            e.classList.add("butterfly-page-indicator-dot-active");
        }
        previouslyActive = e;
    }), DisposeCondition_ext_1.xViewRemovedGet(this_));
}
exports.xPageIndicatorViewBindDynamic = xPageIndicatorViewBindDynamic;
//# sourceMappingURL=PageIndicatorView.binding.js.map