---


- id: kotlin.collections.Iterable
  type: call
  template: Iterable<~T0~>

# Extensions

- id: kotlin.collections.count
  type: call
  template:
    pattern: iterCount(~this~, ~0~)
    imports:
      iterCount: butterfly/dist/kotlin/Collections

- id: kotlin.collections.reversed
  type: call
  template:
    pattern: iterToArray(~this~).reverse()
    imports:
      iterToArray: toArray from butterfly/dist/kotlin/lazyOp
- id: kotlin.collections.drop
  type: call
  template:
    pattern: iterToArray(iterDrop(~this~, ~0~))
    imports:
      iterToArray: toArray from butterfly/dist/kotlin/lazyOp
      iterFilter: filter from butterfly/dist/kotlin/lazyOp
      iterDrop: drop from butterfly/dist/kotlin/lazyOp
- id: kotlin.collections.dropLast
  type: call
  template:
    pattern: iterToArray(iterDrop(~this~, ~0~))
    imports:
      iterToArray: toArray from butterfly/dist/kotlin/lazyOp
      iterDropRight: dropRight from butterfly/dist/kotlin/lazyOp
- id: kotlin.collections.dropWhile
  type: call
  template:
    pattern: iterToArray(iterDropUntil(~this~, (x) => { !~0~(x) }))
    imports:
      iterToArray: toArray from butterfly/dist/kotlin/lazyOp
      iterDropUntil: dropUntil from butterfly/dist/kotlin/lazyOp
#- id: kotlin.collections.dropLastWhile

- id: kotlin.collections.take
  type: call
  template:
    pattern: iterToArray(iterTake(~this~, ~0~))
    imports:
      iterToArray: toArray from butterfly/dist/kotlin/lazyOp
      iterTake: take from butterfly/dist/kotlin/lazyOp
- id: kotlin.collections.takeLast
  type: call
  template:
    pattern: iterToArray(iterTake(~this~, ~0~))
    imports:
      iterToArray: toArray from butterfly/dist/kotlin/lazyOp
      iterTakeRight: takeRight from butterfly/dist/kotlin/lazyOp
- id: kotlin.collections.takeWhile
  type: call
  template:
    pattern: iterToArray(iterTakeUntil(~this~, (x) => { !~0~(x) }))
    imports:
      iterToArray: toArray from butterfly/dist/kotlin/lazyOp
      iterTakeUntil: takeUntil from butterfly/dist/kotlin/lazyOp
#- id: kotlin.collections.takeLastWhile

- id: kotlin.collections.filter
  type: call
  template:
    pattern: iterToArray(iterFilter(~this~, ~0~))
    imports:
      iterToArray: toArray from butterfly/dist/kotlin/lazyOp
      iterFilter: filter from butterfly/dist/kotlin/lazyOp
- id: kotlin.collections.map
  type: call
  template:
    pattern: iterToArray(iterMap(~this~, ~0~))
    imports:
      iterToArray: toArray from butterfly/dist/kotlin/lazyOp
      iterMap: map from butterfly/dist/kotlin/lazyOp
- id: kotlin.collections.mapIndexed
  type: call
  template:
    pattern: iterToArray(iterMap(~this~, (_v, _i) => { ~L0~ }))
    imports:
      iterToArray: toArray from butterfly/dist/kotlin/lazyOp
      iterMap: map from butterfly/dist/kotlin/lazyOp
    lambdaTransforms:
      0: ["_i", "_v"]
- id: kotlin.collections.flatMap
  type: call
  template:
    pattern: iterToArray(iterFlatten(iterMap(~this~, ~0~)))
    imports:
      iterToArray: toArray from butterfly/dist/kotlin/lazyOp
      iterMap: map from butterfly/dist/kotlin/lazyOp
      iterFlatten: flatten from butterfly/dist/kotlin/lazyOp

- id: kotlin.collections.filterIndexed
  type: call
  template:
    pattern: iterToArray(iterFilter(~this~, ~0~))
    imports:
      iterToArray: toArray from butterfly/dist/kotlin/lazyOp
      iterFilter: filter from butterfly/dist/kotlin/lazyOp
- id: kotlin.collections.filterNot
  type: call
  template:
    pattern: iterToArray(iterFilter(~this~, (x)=>{ !~0~(x) ))
    imports:
      iterToArray: toArray from butterfly/dist/kotlin/lazyOp
      iterFilter: filter from butterfly/dist/kotlin/lazyOp
- id: kotlin.collections.filterNotNull
  type: call
  template:
    pattern: iterToArray(iterableFilterNotNull(~this~))
    imports:
      iterToArray: toArray from butterfly/dist/kotlin/lazyOp
      iterableFilterNotNull: butterfly/dist/KotlinCollections
- id: kotlin.collections.mapNotNull
  type: call
  template:
    pattern: iterToArray(iterableFilterNotNull(iterMap(~this~, ~0~)))
    imports:
      iterToArray: toArray from butterfly/dist/kotlin/lazyOp
      iterMap: map from butterfly/dist/kotlin/lazyOp
      iterableFilterNotNull: butterfly/dist/KotlinCollections
- id: kotlin.collections.mapIndexedNotNull
  type: call
  template:
    pattern: iterToArray(iterableFilterNotNull(iterMap(~this~, (_v, _i) => { ~L0~ })))
    imports:
      iterToArray: toArray from butterfly/dist/kotlin/lazyOp
      iterMap: map from butterfly/dist/kotlin/lazyOp
      iterableFilterNotNull: butterfly/dist/KotlinCollections
    lambdaTransforms:
      0: ["_i", "_v"]
- id: kotlin.collections.chunked
  type: call
  template:
    pattern: iterToArray(iterChunk(~this~, ~0~))
    imports:
      iterToArray: toArray from butterfly/dist/kotlin/lazyOp
      iterChunk: chunk from butterfly/dist/kotlin/lazyOp

- id: kotlin.collections.sorted
  type: call
  template:
    pattern: iterToArray(~this~).sort()
    imports:
      iterToArray: toArray from butterfly/dist/kotlin/lazyOp
- id: kotlin.collections.sortedBy
  type: call
  template:
    pattern: iterToArray(~this~).sort((a, b) => safeCompare(~0~(a), ~0~(b)))
    imports:
      iterToArray: toArray from butterfly/dist/kotlin/lazyOp
      safeCompare: butterfly/dist/kotlin/Comparable
- id: kotlin.collections.sortedByDescending
  type: call
  template:
    pattern: iterToArray(~this~).sort((a, b) => -safeCompare(~0~(a), ~0~(b)))
    imports:
      iterToArray: toArray from butterfly/dist/kotlin/lazyOp
      safeCompare: butterfly/dist/kotlin/Comparable
- id: kotlin.collections.sortedWith
  type: call
  template:
    pattern: iterToArray(~this~).sort(~0~)
    imports:
      iterToArray: toArray from butterfly/dist/kotlin/lazyOp
      safeCompare: butterfly/dist/kotlin/Comparable

- id: kotlin.collections.associate
  type: call
  template:
    pattern: new Map(iterMap(~this~, ~0~))
    imports:
      iterToArray: toArray from butterfly/dist/kotlin/lazyOp
- id: kotlin.collections.associateBy
  type: call
  template:
    pattern: new Map(iterMap(~this~, (_x)=>{ [~0~(_x), _x] }))
    imports:
      iterToArray: toArray from butterfly/dist/kotlin/lazyOp

- id: kotlin.collections.toList
  type: call
  template:
    pattern: iterToArray(~this~)
    imports:
      iterToArray: toArray from butterfly/dist/kotlin/lazyOp

- id: kotlin.collections.toMutableList
  type: call
  template:
    pattern: iterToArray(~this~)
    imports:
      iterToArray: toArray from butterfly/dist/kotlin/lazyOp

- id: kotlin.collections.distinct
  type: call
  template:
    pattern: "[...new EqualOverrideSet(~this~)]"
    imports:
      EqualOverrideSet: butterfly/dist/KotlinCollections

- id: kotlin.collections.toSet
  type: call
  template:
    pattern: "new EqualOverrideSet(~this~)"
    imports:
      EqualOverrideSet: butterfly/dist/KotlinCollections

- id: kotlin.collections.toMutableSet
  type: call
  template:
    pattern: "new EqualOverrideSet(~this~)"
    imports:
      EqualOverrideSet: butterfly/dist/KotlinCollections

- id: kotlin.collections.toHashSet
  type: call
  template:
    pattern: "new EqualOverrideSet(~this~)"
    imports:
      EqualOverrideSet: butterfly/dist/KotlinCollections

- id: kotlin.collections.distinct
  type: call
  typeArgumentRequirements:
    0: primitive
  template:
    pattern: new Set(~this~)

- id: kotlin.collections.toSet
  type: call
  typeArgumentRequirements:
    0: primitive
  template:
    pattern: new Set(~this~)

- id: kotlin.collections.toMutableSet
  type: call
  typeArgumentRequirements:
    0: primitive
  template:
    pattern: new Set(~this~)

- id: kotlin.collections.toHashSet
  type: call
  typeArgumentRequirements:
    0: primitive
  template:
    pattern: new Set(~this~)

# TODO: groupBy

- id: kotlin.collections.find
  type: call
  template:
    pattern: iterFind(~this~, ~0~)
    imports:
      iterFind: find from butterfly/dist/kotlin/lazyOp

- id: kotlin.collections.any
  type: call
  template:
    pattern: iterSome(~this~, ~0~)
    imports:
      iterSome: some from butterfly/dist/kotlin/lazyOp

- id: kotlin.collections.all
  type: call
  template:
    pattern: iterEvery(~this~, ~0~)
    imports:
      iterEvery: every from butterfly/dist/kotlin/lazyOp

- id: kotlin.collections.none
  type: call
  template:
    pattern: (!iterSome(~this~, ~0~))
    imports:
      iterSome: some from butterfly/dist/kotlin/lazyOp

- id: kotlin.collections.forEach
  type: call
  template:
    pattern: for(const _x of ~this~) { ~L0~ }
    lambdaTransforms:
      0: ["_x"]

- id: kotlin.collections.first
  type: call
  arguments: []
  template:
    pattern: iterFirst(~this~)
    imports:
      iterFirst: first from butterfly/dist/kotlin/lazyOp

- id: kotlin.collections.firstOrNull
  type: call
  arguments: []
  template:
    pattern: iterFirstOrNull(~this~)
    imports:
      iterFirstOrNull: butterfly/dist/KotlinCollections

- id: kotlin.collections.last
  type: call
  arguments: []
  template:
    pattern: iterLast(~this~)
    imports:
      iterLast: last from butterfly/dist/kotlin/lazyOp

- id: kotlin.collections.lastOrNull
  type: call
  arguments: []
  template:
    pattern: iterLastOrNull(~this~)
    imports:
      iterLastOrNull: butterfly/dist/KotlinCollections

- id: kotlin.collections.firstOrNull
  type: call
  template:
    pattern: iterFirstOrNullFind(~this~, ~0~)
    imports:
      iterFirstOrNullFind: butterfly/dist/KotlinCollections

- id: kotlin.collections.lastOrNull
  type: call
  template:
    pattern: iterLastOrNullFind(~this~, ~0~)
    imports:
      iterLastOrNullFind: butterfly/dist/KotlinCollections

- id: kotlin.collections.maxBy
  type: call
  template:
    pattern: iterMaxBy(~this~, ~0~)
    imports:
      iterMaxBy: butterfly/dist/kotlin/Collections

- id: kotlin.collections.minBy
  type: call
  template:
    pattern: iterMinBy(~this~, ~0~)
    imports:
      iterMinBy: butterfly/dist/kotlin/Collections

- id: kotlin.collections.max
  type: call
  template:
    pattern: iterMaxBy(~this~, (x)=>x)
    imports:
      iterMaxBy: butterfly/dist/kotlin/Collections

- id: kotlin.collections.min
  type: call
  template:
    pattern: iterMinBy(~this~, (x)=>x)
    imports:
      iterMinBy: butterfly/dist/kotlin/Collections
