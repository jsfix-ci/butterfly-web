// Generated by Butterfly TypeScript converter
// File: Codable.actual.kt
// Package: com.lightningkite.butterfly
import { Exception } from './Kotlin'
import { HttpClient } from './net/HttpClient.actual'
import {parse, parseUntyped, stringify} from "./net/jsonParsing";

//! Declares com.lightningkite.butterfly.Codable
export interface Codable {
}
//! Declares com.lightningkite.butterfly.IsCodable
export type IsCodable = any;

//! Declares com.lightningkite.butterfly.JsonList
export type JsonList = Array<any>;
//! Declares com.lightningkite.butterfly.JsonList
export let JsonList = Array;

//! Declares com.lightningkite.butterfly.JsonMap
export type JsonMap = Map<any, any>;
//! Declares com.lightningkite.butterfly.JsonMap
export let JsonMap = Map;


//! Declares com.lightningkite.butterfly.toJsonString>kotlin.Any
export function xAnyToJsonString(this_: (IsCodable | null)): string{
    return stringify(this_);
}

//! Declares com.lightningkite.butterfly.fromJsonString>kotlin.String
export function xStringFromJsonString<T extends IsCodable>(this_: string, T: any): (T | null){
    return parse(JSON.parse(this_), T)
}

//! Declares com.lightningkite.butterfly.fromJsonStringUntyped>kotlin.String
export function xStringFromJsonStringUntyped(this_: string): (IsCodable | null){
    return parseUntyped(this_)
}
