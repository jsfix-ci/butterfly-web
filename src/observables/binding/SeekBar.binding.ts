// Generated by Butterfly TypeScript converter
// File: observables/binding/SeekBar.binding.kt
// Package: com.lightningkite.butterfly.observables.binding
import { xObservablePropertySubscribeBy } from '../ObservableProperty.ext'
import { xViewRemovedGet, xDisposableUntil } from '../../rx/DisposeCondition.ext'
import { MutableObservableProperty } from '../MutableObservableProperty'

//! Declares com.lightningkite.butterfly.observables.binding.bind>android.widget.SeekBar
export function xSeekBarBind(this_: HTMLInputElement, start: number, endInclusive: number, observable: MutableObservableProperty<number>): void {
    this_.min = start.toString()
    this_.max = endInclusive.toString()

    let suppress = false;
    
    xDisposableUntil(xObservablePropertySubscribeBy(observable, undefined, undefined, (value) => {
                if (!suppress) {
                    suppress = true;
                    this_.valueAsNumber = (value);
                    suppress = false;
                }
    }), xViewRemovedGet(this_));
    this_.oninput = (e) => {
        if(!suppress){
            suppress = true;
            observable.value = this_.valueAsNumber;
            suppress = false;
        }
    }
}

