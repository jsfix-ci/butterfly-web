// Generated by Butterfly TypeScript converter
// File: observables/binding/ImageView.binding.actual.kt
// Package: com.lightningkite.butterfly.observables.binding
import {xObservablePropertySubscribeBy} from '../ObservableProperty.ext.shared'
import {xViewRemovedGet, xDisposableUntil} from '../../rx/DisposeCondition.actual'
import {Image} from '../../Image.shared'
import {ObservableProperty} from '../ObservableProperty.shared'
import {xImageViewLoadImage, xImageViewLoadVideoThumbnail} from "../../views/ImageView.actual";
import {post} from "../../delay.actual";

//! Declares com.lightningkite.butterfly.observables.binding.bindImage
export function xImageViewBindImage(this_: HTMLImageElement, image: ObservableProperty<(Image | null)>) {
    post(() => {
        xDisposableUntil(xObservablePropertySubscribeBy(image, undefined, undefined, (it) => {
            xImageViewLoadImage(this_, it)
        }), xViewRemovedGet(this_))
    });
}


//! Declares com.lightningkite.butterfly.observables.binding.bindVideoThumbnail
export function xImageViewBindVideoThumbnail(this_: HTMLImageElement, image: ObservableProperty<(Image | null)>) {
    post(() => {
        xDisposableUntil(xObservablePropertySubscribeBy(image, undefined, undefined, (it) => {
            xImageViewLoadVideoThumbnail(this_, it)
        }), xViewRemovedGet(this_))
    });
}

